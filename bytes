fx 1 pot 1   
byte 4 bits 5,6  0
byte position 0 bit 3,3       2
byte position 0 2,2 10
byte position 5 0,6 3
byte p 6 0,0 11


pot 2
bp 6 2,6 0
bp 0 1,1 5
bp 7 0,4 6


0 = patch tempo
1 = new tempo

bp 120 2,2 0
bp 125 5,6 1
bp 126 0,4 3

pot 3
b 0 0,0 0
b 9 0,6 1
b 8 6,6 8
b 10 0,1 9


21 22 23

pot4
b 25 5,6 0
24 6,6 2
26 0,6 3
24 5,5 10
27 0,0 11

pot 5 
27 2,6 0
24 4,4 5
28 0,4 6

pot 6
24 3,3 0
29 0,6 1
24 2,2 8
30 0,1 9

pot 7

31 32 33
45 5,6 0
40 2,2 2
46 0,6 3
40 1,1 10
47 0,0 11

pot 8
47 2,6 0
40 0,0 5
49 0,4 6

pot 9
48 6,6 0
50 0,6 1
48 5,5 8
51 0,1 9

tempo
125 5,6 0
120 2,2 2
126 0,4 3










param 15 fxtype 
param 136 category name


active_fx
b124 6,6 0
b120 3,3 1
b125 0,0 2

fx_count
b125 2,4 0

pedal_tempo
b125 5,6 0
b120 2,2 2
b126 0,4 3

def switch_fx(switch_step):
    patchdata= retrieve_patch_data()
    fx_focus= ms_utils.get_fx_focus(patchdata)
    number_of_fx= ms_utils.get_number_of_effects(patchdata)
    nrm_fx_focus= fx_focus - (6 - number_of_fx) #normalized fx focus means that the fx furthest to the left is always at slot 0.
    pot_nrm_fx_focus= nrm_fx_focus + switch_step    
    if pot_nrm_fx_focus >= 0 and pot_nrm_fx_focus < number_of_fx:
        #print("...Switching FX from ", nrm_fx_focus, " to ", pot_nrm_fx_focus)
        pot_fx_focus= pot_nrm_fx_focus + 6 - number_of_fx
        pot_fx_focus_bin= ms_utils.getbits(bin(pot_fx_focus), 8)
        newpatchdata= ms_utils.replace_bit(patchdata, 128, 1, pot_fx_focus_bin[7])
        newpatchdata= ms_utils.replace_bit(newpatchdata, 124, 4, pot_fx_focus_bin[6])
        newpatchdata= ms_utils.replace_bit(newpatchdata, 129, 7, pot_fx_focus_bin[5])
        new_patch_message= mido.Message('sysex', data=newpatchdata)
        ms_utils.send_message(new_patch_message)
        return 1
    else:
        return 0


  local pot_fx_focus_bin = getbits(fx_num, 8)
  replace_bit(data, 130, 1, pot_fx_focus_bin[8])
  replace_bit(data, 126, 4, pot_fx_focus_bin[7])
  replace_bit(data, 131, 7, pot_fx_focus_bin[6])


def get_tap_tempo():
    patchdata_tt= retrieve_patch_data()
    tap_tempo = 0
    tap_tempo = tap_tempo + 1 * ms_utils.getbits(bin(patchdata_tt[129]), 8)[2]
    tap_tempo = tap_tempo + 2 * ms_utils.getbits(bin(patchdata_tt[129]), 8)[1]
    tap_tempo = tap_tempo + 4 * ms_utils.getbits(bin(patchdata_tt[124]), 8)[5]
    tap_tempo = tap_tempo + 8 * ms_utils.getbits(bin(patchdata_tt[130]), 8)[7]
    tap_tempo = tap_tempo + 16 * ms_utils.getbits(bin(patchdata_tt[130]), 8)[6]
    tap_tempo = tap_tempo + 32 * ms_utils.getbits(bin(patchdata_tt[130]), 8)[5]
    tap_tempo = tap_tempo + 64 * ms_utils.getbits(bin(patchdata_tt[130]), 8)[4]
    tap_tempo = tap_tempo + 128 * ms_utils.getbits(bin(patchdata_tt[130]), 8)[3]
    return tap_tempo
 
def set_tap_tempo(tap_tempo):
    #Note: Any tempo set below 40 or above 250 would not work on the Multistomp, but set it to 120.
    patchdata_tt= retrieve_patch_data()
    tap_tempo_bin= ms_utils.getbits(bin(tap_tempo), 8)
    newpatchdata_tt= ms_utils.replace_bit(patchdata_tt, 129, 2, tap_tempo_bin[7])
    newpatchdata_tt= ms_utils.replace_bit(newpatchdata_tt, 129, 1, tap_tempo_bin[6])
    newpatchdata_tt= ms_utils.replace_bit(newpatchdata_tt, 124, 5, tap_tempo_bin[5])
    newpatchdata_tt= ms_utils.replace_bit(newpatchdata_tt, 130, 7, tap_tempo_bin[4])
    newpatchdata_tt= ms_utils.replace_bit(newpatchdata_tt, 130, 6, tap_tempo_bin[3])
    newpatchdata_tt= ms_utils.replace_bit(newpatchdata_tt, 130, 5, tap_tempo_bin[2])
    newpatchdata_tt= ms_utils.replace_bit(newpatchdata_tt, 130, 4, tap_tempo_bin[1])
    newpatchdata_tt= ms_utils.replace_bit(newpatchdata_tt, 130, 3, tap_tempo_bin[0])    
    new_patch_message= mido.Message('sysex', data=newpatchdata_tt)
    ms_utils.send_message(new_patch_message)



Replace bits according to the correct positions
    replace_bit(data, 132, 3, tempo_bin[1])
    replace_bit(data, 132, 4, tempo_bin[2])
    replace_bit(data, 132, 5, tempo_bin[3])
    replace_bit(data, 132, 6, tempo_bin[4])
    replace_bit(data, 132, 7, tempo_bin[5])
    replace_bit(data, 126, 5, tempo_bin[6])
    replace_bit(data, 131, 2, tempo_bin[7])  -- Correct position for tempo bit 2
    replace_bit(data, 131, 1, tempo_bin[8])  




